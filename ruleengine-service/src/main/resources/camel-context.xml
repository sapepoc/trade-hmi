<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean id="testBean" class="com.sap.config.TestBean" />
	<bean id="testBean2" class="com.sap.config.TestBean2" />
	<bean id="testBean3" class="com.sap.config.TestBean3" />
	<bean id="tradeDataDao" class="com.sap.daoImpl.TradeDataDaoImpl" />
	<bean id="tradeService" class="com.sap.serviceImpl.TradeServiceImpl">
		<property name="tradeDataDao" ref="tradeDataDao"></property>
	</bean>
	<bean id="dataController" class="com.sap.controllers.DataController" />
	<bean id="jmsProcessor" class="com.sap.serviceProcessors.JmsProcessor">
		<property name="tradeService" ref="tradeService"></property>
	</bean>

	<bean id="heartbeatProcessor" class="com.sap.serviceProcessors.HeartBeatProcessor" />



	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		init-method="start" destroy-method="stop">
		<property name="maxConnections" value="8" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>
	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="concurrentConsumers" value="10" />
	</bean>
	<!-- <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent"> 
		<property name="configuration" ref="jmsConfig" /> If transacted=true then 
		enable CACHE_CONSUMER (if not using XA) to run faster. See more details at: 
		http://camel.apache.org/jms <property name="transacted" value="true"/> <property 
		name="cacheLevelName" value="CACHE_CONSUMER"/> </bean> -->

	<!-- <import resource="route.xml" /> -->

	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="searchSystemEnvironment" value="true" />
	</bean>

	<bean id="restlet" class="org.apache.camel.component.restlet.RestletComponent">
		<!-- <property name="port" value="8080" /> -->
	</bean>

	<camelContext xmlns="http://camel.apache.org/schema/spring">

		<!-- <restConfiguration bindingMode="auto" component="restlet" host="localhost" 
			port="8084" contextPath="/"></restConfiguration> <rest path="/Traderepo/search"> 
			<get uri="/applyRule"> <to uri="activemq:queue" /> </get> </rest> -->

		<route>
			<from uri="activemq:queuee" />
			<doTry>
				<choice>
					<when>
						<method bean="testBean" method="testMethod" />
						<to uri="bean:jmsProcessor" />
					</when>
					<otherwise>
						<to uri="bean:testBean3?method=testMethod" />
					</otherwise>
				</choice>
				<doCatch>
					<exception>java.lang.Exception</exception>
					<transform>
						<simple> ${exception.message} </simple>
					</transform>
				</doCatch>
			</doTry>
			<!-- <to uri="bean:jmsProcessor"></to> -->
			<log message="Route message from queue to next url " />
		</route>


		<!-- <route> <from uri="timer:foo?period=2s" /> <to uri="bean:heartbeatProcessor"></to> 
			<to uri="stream:out" /> </route> -->

		<route>
			<from uri="activemq:queuee" />
			<log message="direct string meassage from QUEUE .. stream.out " />
			<to uri="stream:out" />
		</route>


	</camelContext>
</beans>


